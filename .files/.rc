# ===------------------------------------------------------------------------===
#
# Author: Lukas Danckwerth
# ===------------------------------------------------------------------------===

# Path to your oh-my-zsh installation.
export ZSH="/Users/lukas/.oh-my-zsh"



# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="blinks"

# Case-sensitive completion
CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $HOME/.oh-my-zsh/plugins/*
# Custom plugins may be added to $HOME/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(osx apple)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment


# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate $HOME/.zshrc"
# alias ohmyzsh="mate $HOME/.oh-my-zsh"

# ===------------------------------------------------------------------------===
#
# Welcome
# ===------------------------------------------------------------------------===
echo "--> read .zshrc"
echo "--> host name: $(scutil --get LocalHostName)"



# ===------------------------------------------------------------------------===
#
# Check PATH extensions
# ===------------------------------------------------------------------------===

# Add Fastlant Path
if [ -d $HOME/.fastlane ]; then
    export PATH="$HOME/.fastlane/bin:$PATH"
    echo "--> added $HOME/.fastlane to path variable"
fi

# Custom `bin` directory
if [ -d $HOME/bin ]; then
    export PATH="$PATH:$HOME/bin"
    echo "--> added $HOME/bin to path variable"
fi


# ===------------------------------------------------------------------------===
#-
# Aliases
# ===------------------------------------------------------------------------===
if [ -f "${HOME}/.zsh_aliases" ]; then
    source "${HOME}/.zsh_aliases"
    echo "--> read ${HOME}/.zsh_aliases"
fi

if [ -f "${HOME}/.zsh_winvalue" ]; then
    source "${HOME}/.zsh_winvalue"
    echo "--> read ${HOME}/.zsh_winvalue"
fi



# ===------------------------------------------------------------------------===
#
# Colors
# ===------------------------------------------------------------------------===
export TERM="xterm-color" 
export GREP_OPTIONS='--color=auto' GREP_COLOR='1;32'
export CLICOLOR=1
export LSCOLORS=ExFxBxDxCxegedabagacad
export LS_COLORS='rs=0:di=01;34:ln=01;36:mh=00:pi=40;33'



# ===------------------------------------------------------------------------===
#
# Language
# ===------------------------------------------------------------------------===
export GEM_HOME=~/.gems
export PATH=$PATH:~/.gems/bin



# ===------------------------------------------------------------------------===
#
# Language
# ===------------------------------------------------------------------------===
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8



# ===------------------------------------------------------------------------===
#
# Manuals
# ===------------------------------------------------------------------------===
if [ -d $HOME/.manuals ]; then

  # commmand that can list and show manuals from the .manuals folder
  manuals() {
    if [ $# -eq 0 ]; then
    # ls -l $HOME/.manuals
    printf "\n\n"
    for file in $HOME/.manuals/*; do
      echo - $(basename $file)
    done
    
    printf "\n\n"
    elif [ $# -eq 1 ]; then
    printf "\n"
    cat $HOME/.manuals/$1
    printf "\n\n"
    else
    echo "Invalid number of arguments."
    fi
  }
  echo "--> added manuals function"
fi



# ===------------------------------------------------------------------------===
#
# Extens Builtin Commands
# ===------------------------------------------------------------------------===

# Always list directory contents upon 'cd'
cd() {
   builtin cd "$@"
   rm -f ".DS_Store"
   clear
   ls -la
}    

echo "Resulting PATH: ${PATH}"
echo && echo && echo
export PATH="/usr/local/opt/ruby/bin:$PATH"
